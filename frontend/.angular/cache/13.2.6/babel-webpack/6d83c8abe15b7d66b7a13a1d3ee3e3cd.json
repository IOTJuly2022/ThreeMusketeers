{"ast":null,"code":"/**\n * @license Angular v13.2.7\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { Location, LocationStrategy } from '@angular/common';\nimport { SpyLocation, MockLocationStrategy } from '@angular/common/testing';\nimport * as i0 from '@angular/core';\nimport { Compiler, Injector, Optional, NgModule } from '@angular/core';\nimport { Router, ɵflatten, ɵassignExtraOptionsToRouter, provideRoutes, ROUTER_CONFIGURATION, RouterModule, ɵROUTER_PROVIDERS, UrlSerializer, ChildrenOutletContexts, ROUTES, UrlHandlingStrategy, RouteReuseStrategy, PreloadingStrategy, NoPreloading } from '@angular/router';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists to easily patch the SpyNgModuleFactoryLoader into g3\n\nconst EXTRA_ROUTER_TESTING_PROVIDERS = [];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nfunction isUrlHandlingStrategy(opts) {\n  // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n  // runtime.\n  return 'shouldProcessUrl' in opts;\n}\n/**\n * Router setup factory function used for testing.\n *\n * @publicApi\n */\n\n\nfunction setupTestingRouter(urlSerializer, contexts, location, compiler, injector, routes, opts, urlHandlingStrategy, routeReuseStrategy) {\n  const router = new Router(null, urlSerializer, contexts, location, injector, compiler, ɵflatten(routes));\n\n  if (opts) {\n    // Handle deprecated argument ordering.\n    if (isUrlHandlingStrategy(opts)) {\n      router.urlHandlingStrategy = opts;\n    } else {\n      // Handle ExtraOptions\n      ɵassignExtraOptionsToRouter(opts, router);\n    }\n  }\n\n  if (urlHandlingStrategy) {\n    router.urlHandlingStrategy = urlHandlingStrategy;\n  }\n\n  if (routeReuseStrategy) {\n    router.routeReuseStrategy = routeReuseStrategy;\n  }\n\n  return router;\n}\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location` and `LocationStrategy`.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestingModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * @publicApi\n */\n\n\nclass RouterTestingModule {\n  static withRoutes(routes, config) {\n    return {\n      ngModule: RouterTestingModule,\n      providers: [provideRoutes(routes), {\n        provide: ROUTER_CONFIGURATION,\n        useValue: config ? config : {}\n      }]\n    };\n  }\n\n}\n\nRouterTestingModule.ɵfac = function RouterTestingModule_Factory(t) {\n  return new (t || RouterTestingModule)();\n};\n\nRouterTestingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RouterTestingModule,\n  exports: [RouterModule]\n});\nRouterTestingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [ɵROUTER_PROVIDERS, EXTRA_ROUTER_TESTING_PROVIDERS, {\n    provide: Location,\n    useClass: SpyLocation\n  }, {\n    provide: LocationStrategy,\n    useClass: MockLocationStrategy\n  }, {\n    provide: Router,\n    useFactory: setupTestingRouter,\n    deps: [UrlSerializer, ChildrenOutletContexts, Location, Compiler, Injector, ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]]\n  }, {\n    provide: PreloadingStrategy,\n    useExisting: NoPreloading\n  }, provideRoutes([])],\n  imports: [RouterModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouterTestingModule, [{\n    type: NgModule,\n    args: [{\n      exports: [RouterModule],\n      providers: [ɵROUTER_PROVIDERS, EXTRA_ROUTER_TESTING_PROVIDERS, {\n        provide: Location,\n        useClass: SpyLocation\n      }, {\n        provide: LocationStrategy,\n        useClass: MockLocationStrategy\n      }, {\n        provide: Router,\n        useFactory: setupTestingRouter,\n        deps: [UrlSerializer, ChildrenOutletContexts, Location, Compiler, Injector, ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]]\n      }, {\n        provide: PreloadingStrategy,\n        useExisting: NoPreloading\n      }, provideRoutes([])]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists for easily patching SpyNgModuleFactoryLoader in g3\n\n\nvar spy_ng_module_factory_loader = {};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RouterTestingModule, setupTestingRouter };","map":{"version":3,"names":["Location","LocationStrategy","SpyLocation","MockLocationStrategy","i0","Compiler","Injector","Optional","NgModule","Router","ɵflatten","ɵassignExtraOptionsToRouter","provideRoutes","ROUTER_CONFIGURATION","RouterModule","ɵROUTER_PROVIDERS","UrlSerializer","ChildrenOutletContexts","ROUTES","UrlHandlingStrategy","RouteReuseStrategy","PreloadingStrategy","NoPreloading","EXTRA_ROUTER_TESTING_PROVIDERS","isUrlHandlingStrategy","opts","setupTestingRouter","urlSerializer","contexts","location","compiler","injector","routes","urlHandlingStrategy","routeReuseStrategy","router","RouterTestingModule","withRoutes","config","ngModule","providers","provide","useValue","ɵfac","ɵmod","ɵinj","useClass","useFactory","deps","useExisting","type","args","exports","spy_ng_module_factory_loader"],"sources":["E:/cognizant/training/git/iotproject/frontend/node_modules/@angular/router/fesm2015/testing.mjs"],"sourcesContent":["/**\n * @license Angular v13.2.7\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Location, LocationStrategy } from '@angular/common';\nimport { SpyLocation, MockLocationStrategy } from '@angular/common/testing';\nimport * as i0 from '@angular/core';\nimport { Compiler, Injector, Optional, NgModule } from '@angular/core';\nimport { Router, ɵflatten, ɵassignExtraOptionsToRouter, provideRoutes, ROUTER_CONFIGURATION, RouterModule, ɵROUTER_PROVIDERS, UrlSerializer, ChildrenOutletContexts, ROUTES, UrlHandlingStrategy, RouteReuseStrategy, PreloadingStrategy, NoPreloading } from '@angular/router';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists to easily patch the SpyNgModuleFactoryLoader into g3\nconst EXTRA_ROUTER_TESTING_PROVIDERS = [];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isUrlHandlingStrategy(opts) {\n    // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n    // runtime.\n    return 'shouldProcessUrl' in opts;\n}\n/**\n * Router setup factory function used for testing.\n *\n * @publicApi\n */\nfunction setupTestingRouter(urlSerializer, contexts, location, compiler, injector, routes, opts, urlHandlingStrategy, routeReuseStrategy) {\n    const router = new Router(null, urlSerializer, contexts, location, injector, compiler, ɵflatten(routes));\n    if (opts) {\n        // Handle deprecated argument ordering.\n        if (isUrlHandlingStrategy(opts)) {\n            router.urlHandlingStrategy = opts;\n        }\n        else {\n            // Handle ExtraOptions\n            ɵassignExtraOptionsToRouter(opts, router);\n        }\n    }\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    return router;\n}\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location` and `LocationStrategy`.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestingModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * @publicApi\n */\nclass RouterTestingModule {\n    static withRoutes(routes, config) {\n        return {\n            ngModule: RouterTestingModule,\n            providers: [\n                provideRoutes(routes),\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n            ]\n        };\n    }\n}\nRouterTestingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: RouterTestingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRouterTestingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: RouterTestingModule, exports: [RouterModule] });\nRouterTestingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: RouterTestingModule, providers: [\n        ɵROUTER_PROVIDERS,\n        EXTRA_ROUTER_TESTING_PROVIDERS,\n        { provide: Location, useClass: SpyLocation },\n        { provide: LocationStrategy, useClass: MockLocationStrategy },\n        {\n            provide: Router,\n            useFactory: setupTestingRouter,\n            deps: [\n                UrlSerializer, ChildrenOutletContexts, Location, Compiler, Injector, ROUTES,\n                ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()],\n                [RouteReuseStrategy, new Optional()]\n            ]\n        },\n        { provide: PreloadingStrategy, useExisting: NoPreloading },\n        provideRoutes([]),\n    ], imports: [RouterModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: RouterTestingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [RouterModule],\n                    providers: [\n                        ɵROUTER_PROVIDERS,\n                        EXTRA_ROUTER_TESTING_PROVIDERS,\n                        { provide: Location, useClass: SpyLocation },\n                        { provide: LocationStrategy, useClass: MockLocationStrategy },\n                        {\n                            provide: Router,\n                            useFactory: setupTestingRouter,\n                            deps: [\n                                UrlSerializer, ChildrenOutletContexts, Location, Compiler, Injector, ROUTES,\n                                ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()],\n                                [RouteReuseStrategy, new Optional()]\n                            ]\n                        },\n                        { provide: PreloadingStrategy, useExisting: NoPreloading },\n                        provideRoutes([]),\n                    ]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists for easily patching SpyNgModuleFactoryLoader in g3\nvar spy_ng_module_factory_loader = {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RouterTestingModule, setupTestingRouter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}