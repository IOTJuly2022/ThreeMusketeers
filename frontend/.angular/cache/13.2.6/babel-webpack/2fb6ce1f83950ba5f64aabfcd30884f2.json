{"ast":null,"code":"import _asyncToGenerator from \"E:\\\\cognizant\\\\training\\\\git\\\\iotproject\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { AppComponent } from './app.component';\ndescribe('AppComponent', () => {\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [RouterTestingModule],\n      declarations: [AppComponent]\n    }).compileComponents();\n  }));\n  it('should create the app', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app).toBeTruthy();\n  });\n  it(`should have as title 'threemusketeers'`, () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app.title).toEqual('threemusketeers');\n  });\n  it('should render title', () => {\n    var _a;\n\n    const fixture = TestBed.createComponent(AppComponent);\n    fixture.detectChanges();\n    const compiled = fixture.nativeElement;\n    expect((_a = compiled.querySelector('.content span')) === null || _a === void 0 ? void 0 : _a.textContent).toContain('threemusketeers app is running!');\n  });\n});","map":{"version":3,"names":["TestBed","RouterTestingModule","AppComponent","describe","beforeEach","configureTestingModule","imports","declarations","compileComponents","it","fixture","createComponent","app","componentInstance","expect","toBeTruthy","title","toEqual","_a","detectChanges","compiled","nativeElement","querySelector","textContent","toContain"],"sources":["E:/cognizant/training/git/iotproject/frontend/src/app/app.component.spec.ts"],"sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\nimport { AppComponent } from './app.component';\r\ndescribe('AppComponent', () => {\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            imports: [\r\n                RouterTestingModule\r\n            ],\r\n            declarations: [\r\n                AppComponent\r\n            ],\r\n        }).compileComponents();\r\n    });\r\n    it('should create the app', () => {\r\n        const fixture = TestBed.createComponent(AppComponent);\r\n        const app = fixture.componentInstance;\r\n        expect(app).toBeTruthy();\r\n    });\r\n    it(`should have as title 'threemusketeers'`, () => {\r\n        const fixture = TestBed.createComponent(AppComponent);\r\n        const app = fixture.componentInstance;\r\n        expect(app.title).toEqual('threemusketeers');\r\n    });\r\n    it('should render title', () => {\r\n        var _a;\r\n        const fixture = TestBed.createComponent(AppComponent);\r\n        fixture.detectChanges();\r\n        const compiled = fixture.nativeElement;\r\n        expect((_a = compiled.querySelector('.content span')) === null || _a === void 0 ? void 0 : _a.textContent).toContain('threemusketeers app is running!');\r\n    });\r\n});\r\n"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACAC,QAAQ,CAAC,cAAD,EAAiB,MAAM;EAC3BC,UAAU,iCAAC,aAAY;IACnB,MAAMJ,OAAO,CAACK,sBAAR,CAA+B;MACjCC,OAAO,EAAE,CACLL,mBADK,CADwB;MAIjCM,YAAY,EAAE,CACVL,YADU;IAJmB,CAA/B,EAOHM,iBAPG,EAAN;EAQH,CATS,EAAV;EAUAC,EAAE,CAAC,uBAAD,EAA0B,MAAM;IAC9B,MAAMC,OAAO,GAAGV,OAAO,CAACW,eAAR,CAAwBT,YAAxB,CAAhB;IACA,MAAMU,GAAG,GAAGF,OAAO,CAACG,iBAApB;IACAC,MAAM,CAACF,GAAD,CAAN,CAAYG,UAAZ;EACH,CAJC,CAAF;EAKAN,EAAE,CAAE,wCAAF,EAA2C,MAAM;IAC/C,MAAMC,OAAO,GAAGV,OAAO,CAACW,eAAR,CAAwBT,YAAxB,CAAhB;IACA,MAAMU,GAAG,GAAGF,OAAO,CAACG,iBAApB;IACAC,MAAM,CAACF,GAAG,CAACI,KAAL,CAAN,CAAkBC,OAAlB,CAA0B,iBAA1B;EACH,CAJC,CAAF;EAKAR,EAAE,CAAC,qBAAD,EAAwB,MAAM;IAC5B,IAAIS,EAAJ;;IACA,MAAMR,OAAO,GAAGV,OAAO,CAACW,eAAR,CAAwBT,YAAxB,CAAhB;IACAQ,OAAO,CAACS,aAAR;IACA,MAAMC,QAAQ,GAAGV,OAAO,CAACW,aAAzB;IACAP,MAAM,CAAC,CAACI,EAAE,GAAGE,QAAQ,CAACE,aAAT,CAAuB,eAAvB,CAAN,MAAmD,IAAnD,IAA2DJ,EAAE,KAAK,KAAK,CAAvE,GAA2E,KAAK,CAAhF,GAAoFA,EAAE,CAACK,WAAxF,CAAN,CAA2GC,SAA3G,CAAqH,iCAArH;EACH,CANC,CAAF;AAOH,CA5BO,CAAR"},"metadata":{},"sourceType":"module"}