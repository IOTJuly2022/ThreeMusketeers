{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { TemplateRef, Component, ChangeDetectionStrategy, Input, EventEmitter, Directive, Output, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject, fromEvent } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { takeUntil, first } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nfunction MdbPopoverComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.title, \" \");\n  }\n}\n\nfunction MdbPopoverComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementContainer(1, 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.content);\n  }\n}\n\nfunction MdbPopoverComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.content, \" \");\n  }\n}\n\nclass MdbPopoverComponent {\n  constructor(_cdRef) {\n    this._cdRef = _cdRef;\n    this._hidden = new Subject();\n    this.animationState = 'hidden';\n  }\n\n  get isContentTemplate() {\n    return this.content instanceof TemplateRef;\n  }\n\n  markForCheck() {\n    this._cdRef.markForCheck();\n  }\n\n  onAnimationEnd(event) {\n    if (event.toState === 'hidden') {\n      this._hidden.next();\n    }\n  }\n\n}\n\nMdbPopoverComponent.ɵfac = function MdbPopoverComponent_Factory(t) {\n  return new (t || MdbPopoverComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nMdbPopoverComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MdbPopoverComponent,\n  selectors: [[\"mdb-popover\"]],\n  inputs: {\n    title: \"title\",\n    content: \"content\",\n    animation: \"animation\"\n  },\n  decls: 4,\n  vars: 5,\n  consts: [[1, \"popover\"], [\"class\", \"popover-header\", 4, \"ngIf\"], [\"class\", \"popover-body\", 4, \"ngIf\"], [1, \"popover-header\"], [1, \"popover-body\"], [3, \"ngTemplateOutlet\"]],\n  template: function MdbPopoverComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"@fade.done\", function MdbPopoverComponent_Template_div_animation_fade_done_0_listener($event) {\n        return ctx.onAnimationEnd($event);\n      });\n      i0.ɵɵtemplate(1, MdbPopoverComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵtemplate(2, MdbPopoverComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵtemplate(3, MdbPopoverComponent_div_3_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@fade\", ctx.animationState)(\"@.disabled\", !ctx.animation);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isContentTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isContentTemplate);\n    }\n  },\n  directives: [i1.NgIf, i1.NgTemplateOutlet],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('fade', [state('visible', style({\n      opacity: 1\n    })), state('hidden', style({\n      opacity: 0\n    })), transition('visible <=> hidden', animate('150ms linear')), transition(':enter', animate('150ms linear'))])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbPopoverComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mdb-popover',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('fade', [state('visible', style({\n        opacity: 1\n      })), state('hidden', style({\n        opacity: 0\n      })), transition('visible <=> hidden', animate('150ms linear')), transition(':enter', animate('150ms linear'))])],\n      template: \"<div\\n  class=\\\"popover\\\"\\n  [@fade]=\\\"animationState\\\"\\n  (@fade.done)=\\\"onAnimationEnd($event)\\\"\\n  [@.disabled]=\\\"!animation\\\"\\n>\\n  <div *ngIf=\\\"title\\\" class=\\\"popover-header\\\">\\n    {{ title }}\\n  </div>\\n  <div *ngIf=\\\"isContentTemplate\\\" class=\\\"popover-body\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"$any(content)\\\"></ng-container>\\n  </div>\\n  <div *ngIf=\\\"!isContentTemplate\\\" class=\\\"popover-body\\\">\\n    {{ content }}\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    title: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }]\n  });\n})(); // eslint-disable-next-line @angular-eslint/component-class-suffix\n\n\nclass MdbPopoverDirective {\n  constructor(_overlay, _overlayPositionBuilder, _elementRef) {\n    this._overlay = _overlay;\n    this._overlayPositionBuilder = _overlayPositionBuilder;\n    this._elementRef = _elementRef;\n    this.mdbPopover = '';\n    this.mdbPopoverTitle = '';\n    this._popoverDisabled = false;\n    this.placement = 'top';\n    this._animation = false;\n    this.trigger = 'click';\n    this.delayShow = 0;\n    this.delayHide = 0;\n    this.offset = 4;\n    this.popoverShow = new EventEmitter();\n    this.popoverShown = new EventEmitter();\n    this.popoverHide = new EventEmitter();\n    this.popoverHidden = new EventEmitter();\n    this._open = false;\n    this._showTimeout = 0;\n    this._hideTimeout = 0;\n    this._destroy$ = new Subject();\n  }\n\n  get popoverDisabled() {\n    return this._popoverDisabled;\n  }\n\n  set popoverDisabled(value) {\n    this._popoverDisabled = coerceBooleanProperty(value);\n  }\n\n  get animation() {\n    return this._animation;\n  }\n\n  set animation(value) {\n    this._animation = coerceBooleanProperty(value);\n  }\n\n  ngOnInit() {\n    if (this.popoverDisabled || this.mdbPopover === '' && this.mdbPopoverTitle === '') {\n      return;\n    }\n\n    this._bindTriggerEvents();\n  }\n\n  ngOnDestroy() {\n    if (this._open) {\n      this.hide();\n    }\n\n    this._destroy$.next();\n\n    this._destroy$.complete();\n  }\n\n  _bindTriggerEvents() {\n    const triggers = this.trigger.split(' ');\n    triggers.forEach(trigger => {\n      if (trigger === 'click') {\n        fromEvent(this._elementRef.nativeElement, trigger).pipe(takeUntil(this._destroy$)).subscribe(() => this.toggle());\n      } else if (trigger !== 'manual') {\n        const evIn = trigger === 'hover' ? 'mouseenter' : 'focusin';\n        const evOut = trigger === 'hover' ? 'mouseleave' : 'focusout';\n        fromEvent(this._elementRef.nativeElement, evIn).pipe(takeUntil(this._destroy$)).subscribe(() => this.show());\n        fromEvent(this._elementRef.nativeElement, evOut).pipe(takeUntil(this._destroy$)).subscribe(() => this.hide());\n      }\n    });\n  }\n\n  _createOverlayConfig() {\n    const positionStrategy = this._overlayPositionBuilder.flexibleConnectedTo(this._elementRef).withPositions(this._getPosition());\n\n    const overlayConfig = new OverlayConfig({\n      hasBackdrop: false,\n      scrollStrategy: this._overlay.scrollStrategies.reposition(),\n      positionStrategy\n    });\n    return overlayConfig;\n  }\n\n  _createOverlay() {\n    this._overlayRef = this._overlay.create(this._createOverlayConfig());\n  }\n\n  _getPosition() {\n    let position;\n    const positionTop = {\n      originX: 'center',\n      originY: 'top',\n      overlayX: 'center',\n      overlayY: 'bottom',\n      offsetY: -this.offset\n    };\n    const positionBottom = {\n      originX: 'center',\n      originY: 'bottom',\n      overlayX: 'center',\n      overlayY: 'top',\n      offsetY: this.offset\n    };\n    const positionRight = {\n      originX: 'end',\n      originY: 'center',\n      overlayX: 'start',\n      overlayY: 'center',\n      offsetX: this.offset\n    };\n    const positionLeft = {\n      originX: 'start',\n      originY: 'center',\n      overlayX: 'end',\n      overlayY: 'center',\n      offsetX: -this.offset\n    };\n\n    switch (this.placement) {\n      case 'top':\n        position = [positionTop, positionBottom];\n        break;\n\n      case 'bottom':\n        position = [positionBottom, positionTop];\n        break;\n\n      case 'left':\n        position = [positionLeft, positionRight, positionTop, positionBottom];\n        break;\n\n      case 'right':\n        position = [positionRight, positionLeft, positionTop, positionBottom];\n        break;\n\n      default:\n        break;\n    }\n\n    return position;\n  }\n\n  show() {\n    if (this._hideTimeout) {\n      this._overlayRef.detach();\n\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = null;\n    }\n\n    this._createOverlay();\n\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = null;\n    }\n\n    this._showTimeout = setTimeout(() => {\n      const tooltipPortal = new ComponentPortal(MdbPopoverComponent);\n      this.popoverShow.emit(this);\n      this._open = true;\n      this._tooltipRef = this._overlayRef.attach(tooltipPortal);\n      this._tooltipRef.instance.content = this.template || this.mdbPopover;\n      this._tooltipRef.instance.title = this.mdbPopoverTitle;\n      this._tooltipRef.instance.animation = this.animation;\n      this._tooltipRef.instance.animationState = 'visible';\n\n      this._tooltipRef.instance.markForCheck();\n\n      this.popoverShown.emit(this);\n    }, this.delayShow);\n  }\n\n  hide() {\n    if (this._showTimeout) {\n      clearTimeout(this._showTimeout);\n      this._showTimeout = null;\n    } else {\n      return;\n    }\n\n    this._hideTimeout = setTimeout(() => {\n      this.popoverHide.emit(this);\n\n      if (!this._tooltipRef) {\n        this._overlayRef.detach();\n\n        this._open = false;\n        this.popoverHidden.emit(this);\n      } else {\n        this._tooltipRef.instance._hidden.pipe(first()).subscribe(() => {\n          this._overlayRef.detach();\n\n          this._open = false;\n          this.popoverHidden.emit(this);\n        });\n\n        this._tooltipRef.instance.animationState = 'hidden';\n\n        this._tooltipRef.instance.markForCheck();\n      }\n    }, this.delayHide);\n  }\n\n  toggle() {\n    if (this._open) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n}\n\nMdbPopoverDirective.ɵfac = function MdbPopoverDirective_Factory(t) {\n  return new (t || MdbPopoverDirective)(i0.ɵɵdirectiveInject(i1$1.Overlay), i0.ɵɵdirectiveInject(i1$1.OverlayPositionBuilder), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nMdbPopoverDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MdbPopoverDirective,\n  selectors: [[\"\", \"mdbPopover\", \"\"]],\n  inputs: {\n    mdbPopover: \"mdbPopover\",\n    mdbPopoverTitle: \"mdbPopoverTitle\",\n    popoverDisabled: \"popoverDisabled\",\n    placement: \"placement\",\n    template: \"template\",\n    animation: \"animation\",\n    trigger: \"trigger\",\n    delayShow: \"delayShow\",\n    delayHide: \"delayHide\",\n    offset: \"offset\"\n  },\n  outputs: {\n    popoverShow: \"popoverShow\",\n    popoverShown: \"popoverShown\",\n    popoverHide: \"popoverHide\",\n    popoverHidden: \"popoverHidden\"\n  },\n  exportAs: [\"mdbPopover\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbPopoverDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[mdbPopover]',\n      exportAs: 'mdbPopover'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.Overlay\n    }, {\n      type: i1$1.OverlayPositionBuilder\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    mdbPopover: [{\n      type: Input\n    }],\n    mdbPopoverTitle: [{\n      type: Input\n    }],\n    popoverDisabled: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    trigger: [{\n      type: Input\n    }],\n    delayShow: [{\n      type: Input\n    }],\n    delayHide: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    popoverShow: [{\n      type: Output\n    }],\n    popoverShown: [{\n      type: Output\n    }],\n    popoverHide: [{\n      type: Output\n    }],\n    popoverHidden: [{\n      type: Output\n    }]\n  });\n})();\n\nclass MdbPopoverModule {}\n\nMdbPopoverModule.ɵfac = function MdbPopoverModule_Factory(t) {\n  return new (t || MdbPopoverModule)();\n};\n\nMdbPopoverModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MdbPopoverModule\n});\nMdbPopoverModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, OverlayModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbPopoverModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule],\n      declarations: [MdbPopoverDirective, MdbPopoverComponent],\n      exports: [MdbPopoverDirective, MdbPopoverComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MdbPopoverComponent, MdbPopoverDirective, MdbPopoverModule };","map":{"version":3,"names":["i0","TemplateRef","Component","ChangeDetectionStrategy","Input","EventEmitter","Directive","Output","NgModule","i1$1","OverlayConfig","OverlayModule","ComponentPortal","trigger","state","style","transition","animate","Subject","fromEvent","i1","CommonModule","takeUntil","first","coerceBooleanProperty","MdbPopoverComponent","constructor","_cdRef","_hidden","animationState","isContentTemplate","content","markForCheck","onAnimationEnd","event","toState","next","ɵfac","ChangeDetectorRef","ɵcmp","NgIf","NgTemplateOutlet","opacity","type","args","selector","changeDetection","OnPush","animations","template","title","animation","MdbPopoverDirective","_overlay","_overlayPositionBuilder","_elementRef","mdbPopover","mdbPopoverTitle","_popoverDisabled","placement","_animation","delayShow","delayHide","offset","popoverShow","popoverShown","popoverHide","popoverHidden","_open","_showTimeout","_hideTimeout","_destroy$","popoverDisabled","value","ngOnInit","_bindTriggerEvents","ngOnDestroy","hide","complete","triggers","split","forEach","nativeElement","pipe","subscribe","toggle","evIn","evOut","show","_createOverlayConfig","positionStrategy","flexibleConnectedTo","withPositions","_getPosition","overlayConfig","hasBackdrop","scrollStrategy","scrollStrategies","reposition","_createOverlay","_overlayRef","create","position","positionTop","originX","originY","overlayX","overlayY","offsetY","positionBottom","positionRight","offsetX","positionLeft","detach","clearTimeout","setTimeout","tooltipPortal","emit","_tooltipRef","attach","instance","Overlay","OverlayPositionBuilder","ElementRef","ɵdir","exportAs","MdbPopoverModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["E:/cognizant/training/git/iotproject/frontend/node_modules/mdb-angular-ui-kit/fesm2015/mdb-angular-ui-kit-popover.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { TemplateRef, Component, ChangeDetectionStrategy, Input, EventEmitter, Directive, Output, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject, fromEvent } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { takeUntil, first } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nclass MdbPopoverComponent {\n    constructor(_cdRef) {\n        this._cdRef = _cdRef;\n        this._hidden = new Subject();\n        this.animationState = 'hidden';\n    }\n    get isContentTemplate() {\n        return this.content instanceof TemplateRef;\n    }\n    markForCheck() {\n        this._cdRef.markForCheck();\n    }\n    onAnimationEnd(event) {\n        if (event.toState === 'hidden') {\n            this._hidden.next();\n        }\n    }\n}\nMdbPopoverComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMdbPopoverComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.4\", type: MdbPopoverComponent, selector: \"mdb-popover\", inputs: { title: \"title\", content: \"content\", animation: \"animation\" }, ngImport: i0, template: \"<div\\n  class=\\\"popover\\\"\\n  [@fade]=\\\"animationState\\\"\\n  (@fade.done)=\\\"onAnimationEnd($event)\\\"\\n  [@.disabled]=\\\"!animation\\\"\\n>\\n  <div *ngIf=\\\"title\\\" class=\\\"popover-header\\\">\\n    {{ title }}\\n  </div>\\n  <div *ngIf=\\\"isContentTemplate\\\" class=\\\"popover-body\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"$any(content)\\\"></ng-container>\\n  </div>\\n  <div *ngIf=\\\"!isContentTemplate\\\" class=\\\"popover-body\\\">\\n    {{ content }}\\n  </div>\\n</div>\\n\", directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], animations: [\n        trigger('fade', [\n            state('visible', style({ opacity: 1 })),\n            state('hidden', style({ opacity: 0 })),\n            transition('visible <=> hidden', animate('150ms linear')),\n            transition(':enter', animate('150ms linear')),\n        ]),\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mdb-popover', changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('fade', [\n                            state('visible', style({ opacity: 1 })),\n                            state('hidden', style({ opacity: 0 })),\n                            transition('visible <=> hidden', animate('150ms linear')),\n                            transition(':enter', animate('150ms linear')),\n                        ]),\n                    ], template: \"<div\\n  class=\\\"popover\\\"\\n  [@fade]=\\\"animationState\\\"\\n  (@fade.done)=\\\"onAnimationEnd($event)\\\"\\n  [@.disabled]=\\\"!animation\\\"\\n>\\n  <div *ngIf=\\\"title\\\" class=\\\"popover-header\\\">\\n    {{ title }}\\n  </div>\\n  <div *ngIf=\\\"isContentTemplate\\\" class=\\\"popover-body\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"$any(content)\\\"></ng-container>\\n  </div>\\n  <div *ngIf=\\\"!isContentTemplate\\\" class=\\\"popover-body\\\">\\n    {{ content }}\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { title: [{\n                type: Input\n            }], content: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }] } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass MdbPopoverDirective {\n    constructor(_overlay, _overlayPositionBuilder, _elementRef) {\n        this._overlay = _overlay;\n        this._overlayPositionBuilder = _overlayPositionBuilder;\n        this._elementRef = _elementRef;\n        this.mdbPopover = '';\n        this.mdbPopoverTitle = '';\n        this._popoverDisabled = false;\n        this.placement = 'top';\n        this._animation = false;\n        this.trigger = 'click';\n        this.delayShow = 0;\n        this.delayHide = 0;\n        this.offset = 4;\n        this.popoverShow = new EventEmitter();\n        this.popoverShown = new EventEmitter();\n        this.popoverHide = new EventEmitter();\n        this.popoverHidden = new EventEmitter();\n        this._open = false;\n        this._showTimeout = 0;\n        this._hideTimeout = 0;\n        this._destroy$ = new Subject();\n    }\n    get popoverDisabled() {\n        return this._popoverDisabled;\n    }\n    set popoverDisabled(value) {\n        this._popoverDisabled = coerceBooleanProperty(value);\n    }\n    get animation() {\n        return this._animation;\n    }\n    set animation(value) {\n        this._animation = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        if (this.popoverDisabled || (this.mdbPopover === '' && this.mdbPopoverTitle === '')) {\n            return;\n        }\n        this._bindTriggerEvents();\n    }\n    ngOnDestroy() {\n        if (this._open) {\n            this.hide();\n        }\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n    _bindTriggerEvents() {\n        const triggers = this.trigger.split(' ');\n        triggers.forEach((trigger) => {\n            if (trigger === 'click') {\n                fromEvent(this._elementRef.nativeElement, trigger)\n                    .pipe(takeUntil(this._destroy$))\n                    .subscribe(() => this.toggle());\n            }\n            else if (trigger !== 'manual') {\n                const evIn = trigger === 'hover' ? 'mouseenter' : 'focusin';\n                const evOut = trigger === 'hover' ? 'mouseleave' : 'focusout';\n                fromEvent(this._elementRef.nativeElement, evIn)\n                    .pipe(takeUntil(this._destroy$))\n                    .subscribe(() => this.show());\n                fromEvent(this._elementRef.nativeElement, evOut)\n                    .pipe(takeUntil(this._destroy$))\n                    .subscribe(() => this.hide());\n            }\n        });\n    }\n    _createOverlayConfig() {\n        const positionStrategy = this._overlayPositionBuilder\n            .flexibleConnectedTo(this._elementRef)\n            .withPositions(this._getPosition());\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: false,\n            scrollStrategy: this._overlay.scrollStrategies.reposition(),\n            positionStrategy,\n        });\n        return overlayConfig;\n    }\n    _createOverlay() {\n        this._overlayRef = this._overlay.create(this._createOverlayConfig());\n    }\n    _getPosition() {\n        let position;\n        const positionTop = {\n            originX: 'center',\n            originY: 'top',\n            overlayX: 'center',\n            overlayY: 'bottom',\n            offsetY: -this.offset,\n        };\n        const positionBottom = {\n            originX: 'center',\n            originY: 'bottom',\n            overlayX: 'center',\n            overlayY: 'top',\n            offsetY: this.offset,\n        };\n        const positionRight = {\n            originX: 'end',\n            originY: 'center',\n            overlayX: 'start',\n            overlayY: 'center',\n            offsetX: this.offset,\n        };\n        const positionLeft = {\n            originX: 'start',\n            originY: 'center',\n            overlayX: 'end',\n            overlayY: 'center',\n            offsetX: -this.offset,\n        };\n        switch (this.placement) {\n            case 'top':\n                position = [positionTop, positionBottom];\n                break;\n            case 'bottom':\n                position = [positionBottom, positionTop];\n                break;\n            case 'left':\n                position = [positionLeft, positionRight, positionTop, positionBottom];\n                break;\n            case 'right':\n                position = [positionRight, positionLeft, positionTop, positionBottom];\n                break;\n            default:\n                break;\n        }\n        return position;\n    }\n    show() {\n        if (this._hideTimeout) {\n            this._overlayRef.detach();\n            clearTimeout(this._hideTimeout);\n            this._hideTimeout = null;\n        }\n        this._createOverlay();\n        if (this._hideTimeout) {\n            clearTimeout(this._hideTimeout);\n            this._hideTimeout = null;\n        }\n        this._showTimeout = setTimeout(() => {\n            const tooltipPortal = new ComponentPortal(MdbPopoverComponent);\n            this.popoverShow.emit(this);\n            this._open = true;\n            this._tooltipRef = this._overlayRef.attach(tooltipPortal);\n            this._tooltipRef.instance.content = this.template || this.mdbPopover;\n            this._tooltipRef.instance.title = this.mdbPopoverTitle;\n            this._tooltipRef.instance.animation = this.animation;\n            this._tooltipRef.instance.animationState = 'visible';\n            this._tooltipRef.instance.markForCheck();\n            this.popoverShown.emit(this);\n        }, this.delayShow);\n    }\n    hide() {\n        if (this._showTimeout) {\n            clearTimeout(this._showTimeout);\n            this._showTimeout = null;\n        }\n        else {\n            return;\n        }\n        this._hideTimeout = setTimeout(() => {\n            this.popoverHide.emit(this);\n            if (!this._tooltipRef) {\n                this._overlayRef.detach();\n                this._open = false;\n                this.popoverHidden.emit(this);\n            }\n            else {\n                this._tooltipRef.instance._hidden.pipe(first()).subscribe(() => {\n                    this._overlayRef.detach();\n                    this._open = false;\n                    this.popoverHidden.emit(this);\n                });\n                this._tooltipRef.instance.animationState = 'hidden';\n                this._tooltipRef.instance.markForCheck();\n            }\n        }, this.delayHide);\n    }\n    toggle() {\n        if (this._open) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    }\n}\nMdbPopoverDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverDirective, deps: [{ token: i1$1.Overlay }, { token: i1$1.OverlayPositionBuilder }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMdbPopoverDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.4\", type: MdbPopoverDirective, selector: \"[mdbPopover]\", inputs: { mdbPopover: \"mdbPopover\", mdbPopoverTitle: \"mdbPopoverTitle\", popoverDisabled: \"popoverDisabled\", placement: \"placement\", template: \"template\", animation: \"animation\", trigger: \"trigger\", delayShow: \"delayShow\", delayHide: \"delayHide\", offset: \"offset\" }, outputs: { popoverShow: \"popoverShow\", popoverShown: \"popoverShown\", popoverHide: \"popoverHide\", popoverHidden: \"popoverHidden\" }, exportAs: [\"mdbPopover\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: '[mdbPopover]',\n                    exportAs: 'mdbPopover',\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i1$1.OverlayPositionBuilder }, { type: i0.ElementRef }]; }, propDecorators: { mdbPopover: [{\n                type: Input\n            }], mdbPopoverTitle: [{\n                type: Input\n            }], popoverDisabled: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }], trigger: [{\n                type: Input\n            }], delayShow: [{\n                type: Input\n            }], delayHide: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], popoverShow: [{\n                type: Output\n            }], popoverShown: [{\n                type: Output\n            }], popoverHide: [{\n                type: Output\n            }], popoverHidden: [{\n                type: Output\n            }] } });\n\nclass MdbPopoverModule {\n}\nMdbPopoverModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMdbPopoverModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverModule, declarations: [MdbPopoverDirective, MdbPopoverComponent], imports: [CommonModule, OverlayModule], exports: [MdbPopoverDirective, MdbPopoverComponent] });\nMdbPopoverModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverModule, imports: [[CommonModule, OverlayModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: MdbPopoverModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule],\n                    declarations: [MdbPopoverDirective, MdbPopoverComponent],\n                    exports: [MdbPopoverDirective, MdbPopoverComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbPopoverComponent, MdbPopoverDirective, MdbPopoverModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}